server:
  port: 8090
spring:
  flyway:
    baseline-on-migrate: true
    enabled: true
    user: postgres
    password: aymenmessikh2002
    baseline-description: "init"
    baseline-version: 0
    locations: classpath:db/migration

  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  datasource:
    url: jdbc:postgresql://localhost:5432/NFR
    username: postgres
    password: aymenmessikh2002
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect

  security:
    oauth2:
      resourceserver:
        jwt:
#          issuer-uri: http://localhost:8080/realms/NFR
#          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
          issuer-uri: http://localhost:3000
          jwk-set-uri: http://localhost:3000/.well-known/jwks.json
  mail:
    host: smtp.gmail.com
    port: 587
    username: aymenmessikh.imsi.enpo@gmail.com
    password: mrbk wbme ciro zjnr
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
#jwt:
#  auth:
#    converter:
#      resource-id: NFR
#      principle-attribute: preferred_username
#jwt:
#  auth:
#    converter:
#      principle-attribute: username
#      resource-id: spring-boot

logging:
  level:
    org:
      keycloak: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
  observations:
    key-values:
      application: admin-service


module_name: admin_module
eureka:
  client:
    service - url:
      defaultZone: http://localhost:8761/eureka/
